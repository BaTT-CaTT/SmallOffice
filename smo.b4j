Version=5.51
AppType=JavaFX
NumberOfModules=3
Module1=TextFlow
Module2=UndoManager
Module3=CSSUtils
Build1=Default,b4j.example
NumberOfFiles=1
File1=1.bjl
NumberOfLibraries=14
Library1=jcore
Library2=jfx
Library3=oslibrary
Library4=jdiskspace
Library5=jsystemtray
Library6=jstringutils
Library7=jrandomaccessfile
Library8=jcustomwindow
Library9=jmsgboxes
Library10=javaobject
Library11=jcontrolsfx
Library12=jmqtt
Library13=jxmlsax
Library14=json
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 800 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private MenuBar1 As MenuBar
	Dim dir As String="C:\SmartOffice\core\data"
	Dim dir1 As String="C:\Users\Public\Documents\SmartOffice"
	Dim menulist As List 
	Dim prop As PropertySheet
	Type Record(Text As String, Number As Double, _
     Color As Paint, Fnt As Font, Choices As String, YesNo As Boolean)
	Type UndoData (Text As String, clr As Int)
	Private timer1 As Timer
	Private manager As UndoManager
	Private cho As DirectoryChooser
	Dim save As FileChooser
	Dim time, date As String 
	Dim mi As MenuItem
	Private edit As HTMLEditor
	Private StatusBar1 As StatusBar
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("1") 'Load the layout file.
	MainForm.Resizable=False
	MainForm.Show
	prop.Initialize("prop")
	If File.Exists("C:\SmartOffice\Files","log.txt") Then 
		
		Else
			File.MakeDir("C:\","SmartOffice\core\data")
			File.MakeDir("C:\","SmartOffice\Projects")
		File.MakeDir("C:\Users\Public\Documents","SmartOffice\Projects")
			File.WriteString(dir1,"log.txt","Willkommen")
	End If
	menulist.Initialize
	menulist.AddAll(MenuBar1.Menus)
	DateTime.DateFormat="yyyy-MM-dd"
	time=DateTime.Time(DateTime.Now)
	date=DateTime.Date(DateTime.Now)
	timer1.Initialize("timer1", 1000)
	timer1.Enabled = True
	manager.Initialize(GetState)
	cho.Initialize
	save.Initialize
	cho.InitialDirectory=dir1&"\Projects"
	save.InitialDirectory=cho.InitialDirectory
	
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub GetState As UndoData
	Dim ud As UndoData
	ud.Initialize
	ud.Text = edit.HtmlText
	'ud.clr = fx.Colors.To32Bit(edit.SelectedColor)
	Return ud
End Sub

Sub SetState (ud As UndoData)
	edit.HtmlText = ud.Text
	'edit.SelectedColor = fx.Colors.From32Bit(ud.clr)
End Sub

Sub MenuBar1_Action
	mi = Sender
	If mi.Text="_Close" Then
		MainForm.Close
		Log("close..") 
	End If
	If mi.Text="_Undo" Then
	btnundo_Action
	End If 
	If mi.Text="_Redo" Then 
		btnredo_Action
	End If
	If mi.Text="_Save" Then 
		Button1_Action
	End If 
End Sub

               
Sub Timer1_Tick
	manager.AddState(GetState) 'nothing will happen if the state is the same as the previous one
End Sub

Sub btnundo_Action
	Dim ud As UndoData = manager.Undo
	SetState(ud)
	StatusBar1.Progress=100
	StatusBar1.Text="UnDone @"&time
End Sub

Sub btnredo_Action
	Dim ud As UndoData = manager.Redo
	If ud <> Null Then
		SetState(ud)
		StatusBar1.Progress=100
		StatusBar1.Text="ReDone @"&time
	End If
End Sub

Sub Button2_Action
	
End Sub

Sub Button1_Action
	Dim filename As String = save.ShowSave(MainForm)
	save.setExtensionFilter("TextFile", Array As String("*.txt"))
	save.InitialFileName="default.txt"
	save.Title="Save File"
	If filename <> "" Then
	If filename.ToLowerCase.EndsWith(".txt") = False Then filename = filename & ".txt"
	Dim out As OutputStream = File.OpenOutput("", filename, False)
		File.Delete(dir,"nosave.txt")
	out.Close
	Log("File saved: " & filename)
	
	End If 
End Sub

Sub MenuBar1_SelectedChange (Selected As Boolean)
	
End Sub

Sub mi_Action
	mi = Sender
	If mi.Text="_Kopieren" Then
		
		Log("close..")
	End If
End Sub

Sub Mainform_CloseRequest (EventData As Event)
	If File.Exists(dir,"nosave.txt") Then 
		
		If fx.Msgbox2(MainForm,"You apear to close without Saving the File! would you like to Save the current document?","Save?!","Yes","","No",fx.MSGBOX_WARNING)=fx.DialogResponse.POSITIVE Then
			Button1_Action
		Else
			File.WriteString(dir,"nosave.txt","true")
		End If
		Else 
		EventData.Consume
		MainForm.Close
	End If
End Sub
