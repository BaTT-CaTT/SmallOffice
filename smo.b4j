Version=5.51
AppType=JavaFX
NumberOfModules=4
Module1=TextFlow
Module2=UndoManager
Module3=CSSUtils
Module4=ModalForm
Build1=Default,b4j.example
NumberOfFiles=14
File1=1.bjl
File2=2.bjl
File3=ic_attachment_black_48dp.png
File4=ic_format_align_center_black_18dp.png
File5=ic_format_align_justify_black_18dp.png
File6=ic_format_align_left_black_18dp.png
File7=ic_format_align_right_black_18dp.png
File8=ic_format_indent_increase_black_48dp.png
File9=ic_insert_drive_file_black_48dp.png
File10=Icon.png
File11=new.png
File12=open.png
File13=save.png
File14=style1.css
NumberOfLibraries=13
Library1=jcore
Library2=jfx
Library3=oslibrary
Library4=jdiskspace
Library5=jsystemtray
Library6=jstringutils
Library7=jrandomaccessfile
Library8=jmsgboxes
Library9=javaobject
Library10=jcontrolsfx
Library11=jmqtt
Library12=jxmlsax
Library13=json
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth:600
	#MainFormHeight:800 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private MenuBar1 As MenuBar
	Dim dir As String="C:\SmartOffice\core\data"
	Dim dir1 As String="C:\Users\Public\Documents\SmartOffice"
	Dim menulist As List 
	Dim prop As PropertySheet
	Type Record(Text As String, Number As Double, _
     Color As Paint, Fnt As Font, Choices As String, YesNo As Boolean)
	Type UndoData (Text As String, clr As Int)
	Private timer1 As Timer
	Private manager As UndoManager
	Private cho As DirectoryChooser
	Dim save1 As FileChooser
	Dim time, date As String 
	Dim mi As MenuItem
	Private edit As HTMLEditor
	Private StatusBar1 As StatusBar
Dim tr As TextReader
	Private Pane1 As Pane
	Private TextArea1 As TextArea
	Private CMenu As ContextMenu
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.SetFormStyle("DECORATED")
	'MainForm.SetWindowSizeLimits(600,800,1000,1000)
	MainForm.title="SmallNode"
	MainForm.WindowWidth = fx.PrimaryScreen.MaxX - fx.PrimaryScreen.MinX
	MainForm.WindowLeft = fx.PrimaryScreen.MinX
	MainForm.WindowHeight = fx.PrimaryScreen.MaxY - fx.PrimaryScreen.MinY
	MainForm.WindowTop = fx.PrimaryScreen.MinY
	MainForm.RootPane.LoadLayout("1") 'Load the layout file.
	MainForm.Resizable=True
	menulist.Initialize
	CMenu.Initialize("CM")
	prop.Initialize("prop")
	If File.Exists(dir,"logs.txt") Then 
		
		Else
		File.MakeDir("C:\Users\Public\Documents","SmartOffice\Projects\Web")
			File.MakeDir("C:\","SmartOffice\core\data")
			File.MakeDir("C:\","SmartOffice\Projects")
		File.WriteList(dir,"setlist.txt",menulist)
		
			File.WriteString(dir,"log.txt","Willkommen")
		File.WriteString(dir,"new.txt","Welcome this is a New Texted file.")
	End If
	menulist.Clear
	
	mi.Initialize("Html Code","mi")
	CMenu.MenuItems.Add(mi)
	DateTime.DateFormat="yyyy-MM-dd"
	time=DateTime.Time(DateTime.Now)
	date=DateTime.Date(DateTime.Now)
	timer1.Initialize("timer1", 1000)
	timer1.Enabled = True
	manager.Initialize(GetState)
	cho.Initialize
	save1.Initialize
	cho.InitialDirectory=dir1&"\Projects"
	save1.InitialDirectory=dir1&"\Projects"
	RedirectOutput(dir, "logs.txt")
	
	
	MainForm.Show
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub show_su
	Dim mf As ModalForm
	mf.Initialize(MainForm)
	 mf.read_file
End Sub

Sub RedirectOutput (dir2 As String, FileName As String)
   #if RELEASE
	Dim out As OutputStream = File.OpenOutput(dir2, FileName, False) 'Set to True to append the logs
	Dim ps As JavaObject
	ps.InitializeNewInstance("java.io.PrintStream", Array(out, True, "utf8"))
	Dim jo As JavaObject
	jo.InitializeStatic("java.lang.System")
	jo.RunMethod("setOut", Array(ps))
	jo.RunMethod("setErr", Array(ps))
   #end if
End Sub

Sub GetState As UndoData
	Dim ud As UndoData
	ud.Initialize
	ud.Text = edit.HtmlText
	'ud.clr = fx.Colors.To32Bit(edit.SelectedColor)
	Return ud
End Sub

Sub SetState (ud As UndoData)
	edit.HtmlText = ud.Text
	'edit.SelectedColor = fx.Colors.From32Bit(ud.clr)
End Sub

Sub MenuBar1_Action
	mi = Sender
	If mi.Text="_Close" Then
		MainForm.Close
		Log("close..") 
	End If
	If mi.Text="_New" Then 
		new_file("New Text")
	End If
	If mi.Text="_Show Code" Then 
		show_su
	End If 
	If mi.Text="_Open" Then
		open_new
	End If
	If mi.Text="_Undo" Then
		btnundo_Action
	End If
	If mi.Text="_Redo" Then
		btnredo_Action
	End If
	If mi.Text="_Save" Then
		Button1_Action
	End If
End Sub
     
Sub Timer1_Tick
	manager.AddState(GetState) 'nothing will happen if the state is the same as the previous one
End Sub

Sub btnundo_Action
	Dim ud As UndoData = manager.Undo
	SetState(ud)
	StatusBar1.Progress=100
	StatusBar1.Text="UnDone @"&time
End Sub

Sub btnredo_Action
	Dim ud As UndoData = manager.Redo
	If ud <> Null Then
		SetState(ud)
		StatusBar1.Progress=100
		StatusBar1.Text="ReDone @"&time
	End If
End Sub

Sub open_new
	Dim filen As String = save1.ShowOpen(MainForm)
'	Dim fna As String=save1.InitialFileName
'	fna=filen
	save1.Title="Open File"
	If filen <> "" Then
		menulist.Clear
		menulist.Add(filen)
		edit.HtmlText=File.ReadString(filen,"")
		File.WriteString(dir,"new.txt",filen)
	End If
End Sub

Sub new_file(text As String)
	File.WriteString(dir,"new.txt",text)
	read_file
End Sub

Sub read_file
	Dim text As String=File.ReadString(dir,"new.txt")
	edit.HtmlText=text
	TextArea1.Text=text
End Sub

Sub Button1_Action
	save1.setExtensionFilter("TextFile", Array As String("*.txt"))
	save1.InitialFileName="default.txt"
	save1.Title="Save File"
	Dim filename As String = save1.ShowSave(MainForm)
	If filename <> "" Then
	If filename.ToLowerCase.EndsWith(".txt") = False Then filename = filename & ".txt"
	Dim out As OutputStream = File.OpenOutput("", filename, False)
		File.Delete(dir,"nosave.txt")
		File.WriteString("",filename,edit.HtmlText)
		MainForm.Title=filename
		menulist.Add(filename) 
		new_file(filename)
	out.Close
	Log("File saved: " & filename)
	
	End If 
End Sub

Sub MenuBar1_SelectedChange (Selected As Boolean)
	
End Sub

Sub Mainform_CloseRequest (EventData As Event)
	If File.Exists(dir,"nosave.txt") Then 
		
		If fx.Msgbox2(MainForm,"You apear to close without Saving the File! would you like to Save the current document?","Save?!","Yes","","No",fx.MSGBOX_WARNING)=fx.DialogResponse.POSITIVE Then
			Button1_Action
		Else
			File.WriteString(dir,"nosave.txt","true")
		End If
	Else
		EventData.Consume
		MainForm.Close
	End If
End Sub

Sub TextArea1_TextChanged (Old As String, New As String)
	
End Sub